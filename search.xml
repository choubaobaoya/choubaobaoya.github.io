<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>基础算法</title>
    <url>/2023/08/14/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><pre><code class="c++">#include&lt;iostream&gt;
using namespace std;
const int N = 1e6 + 10;
int n;
int q[N];
void quick_sort(int q[N], int l, int r) &#123;
    
</code></pre>
<span id="more"></span>

<pre><code class="c++">if (l == r)return;
    int x = q[(l + r) / 2], i = l - 1, j = r + 1;
    while (i &lt; j) &#123;
        do i++; while (q[i] &lt; x);
        do j--; while (q[j] &gt; x);
        if (i &lt; j) swap(q[i], q[j]);//swap交换
    &#125;
    quick_sort(q, l, j);
    quick_sort(q, j + 1, r);
&#125;
int main() &#123;
    cin &gt;&gt; n;
    for (int i = 0; i &lt; n; i++)
        cin &gt;&gt; q[i];
    quick_sort(q, 0, n-1);
    for (int j = 0; j &lt; n; j++)
        cout &lt;&lt; q[j]&lt;&lt;endl;
    return 0;

&#125;
</code></pre>
<h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><pre><code class="c++">#include&lt;iostream&gt;
using namespace std;
const int N = 1e6 + 10;
int n;
int q[N], tmp[N];

void merge_sort(int q[], int l, int r) &#123;
    if (l == r) return;
    int mid = l + r &gt;&gt; 1;
    merge_sort(q, l, mid), merge_sort(q, mid + 1, r);
    int k = 0, i = l, j = mid + 1;
    while (i &lt;=mid &amp;&amp; j &lt;= r)  //别忘记带=
        if (q[i] &lt;= q[j])tmp[k++] = q[i++];
        else tmp[k++] = q[j++];
    while (i &lt;= mid)tmp[k++] = q[i++];
    while (j &lt;= r)tmp[k++] = q[j++];
    for (i = l, j = 0; i &lt;= r; j++, i++)q[i] = tmp[j];

&#125;



int main() &#123;
    cin &gt;&gt; n;
    for (int i = 0; i &lt; n; i++)
        cin &gt;&gt; q[i];
    merge_sort(q, 0, n - 1);
    for (int j = 0; j &lt; n; j++)
        cout &lt;&lt; q[j];
    return 0;

&#125;
</code></pre>
<h2 id="整数二分"><a href="#整数二分" class="headerlink" title="整数二分"></a>整数二分</h2><pre><code class="c++">//数的范围
#include&lt;iostream&gt;
using namespace std;
const int N = 1e6 + 10;
int n,m;
int q[N];
int main() &#123;
    cin &gt;&gt; n &gt;&gt; m;
    for (int i = 0; i &lt; n; i++)cin &gt;&gt; q[i];
    while (m--) &#123;
        int x;
        cin &gt;&gt; x;
        int l = 0, r = n - 1;
        while (l &lt; r) &#123;
            int mid = l + r &gt;&gt; 1;
            if (q[mid] &gt;= x)r = mid;
            else l = mid + 1;
        &#125;
        if (q[l] != x)cout &lt;&lt; &quot;-1 -1&quot;;
        else &#123;
            cout &lt;&lt; l&lt;&lt; &quot; &quot;;
            int l = 0, r = n - 1;
            while (l &lt; r) &#123;
                int mid = l + r + 1 &gt;&gt; 1;//l=mid一定要写成mid=l+r+1/2一定要加一
                if (q[mid] &lt;= x)l = mid;//l=mid r就是mid-1;r=mid l就是mid+1;
                else r = mid - 1;
            &#125;
            cout &lt;&lt; l&lt;&lt;endl;
        &#125;

    &#125;
    return 0;
&#125;
</code></pre>
<h2 id="浮点数二分"><a href="#浮点数二分" class="headerlink" title="浮点数二分"></a>浮点数二分</h2><pre><code class="c++">//求平方根
#include&lt;iostream&gt;
using namespace std;
int main() &#123;
    double x;
    cin &gt;&gt; x;
    double l = 0, r = x;
    while (r - l &gt; 1e-6) &#123;
        double mid = ( l + r ) / 2;
        if (mid * mid &gt;= x)r = mid;
        else l = mid;
    &#125;
    cout &lt;&lt; l;
    return 0;
&#125;
</code></pre>
<h2 id="vector容器"><a href="#vector容器" class="headerlink" title="vector容器"></a>vector容器</h2><img src="/2023/08/14/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/1.png" class width="1">

<pre><code class="c++">vector是动态数组
需要引入头文件#include&lt;vector&gt;
vector&lt;数据类型&gt;名称
vector&lt;int&gt;vec
这行代码的意思是定义一个vec的int类型的动态数组

    
    push_back(元素)    
    添加元素
    比如：vector&lt;int&gt;vec;
vec.push_back(1);目前是[1]
vec.push_back(2);目前是[1,2]
    
    pop_back()
    删除元素
    （）里不能写东西
    它是删除动态数组里最后一个元素
    
    /*数组名*/.size()
    访问动态数组的长度
    
    访问某个元素跟普通的数组访问一样
    
    vector&lt;/*数据类型*/&gt;().swap(/*名称/*);
    动态数组清空所有的数据且释放内存格式
    
    /*名称*/.empty()
    检查动态数组大小是否为零
    
</code></pre>
<img src="/2023/08/14/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/2.png" class width="2">

<h2 id="string类"><a href="#string类" class="headerlink" title="string类"></a>string类</h2><pre><code class="c++">string A;
头文件include&lt;string&gt;
    
    构造函数
    const char * str=&quot;hello,world&quot;;

    string B(str);输出hello，world
    string C(B);同上
    string D(10,&quot;a&quot;);输出aaaaaaaaaa;

    拼接字符串
    string A=&quot;我&quot;;
    A+=&quot;爱玩&quot;;输出：我爱玩
        
    string B=&quot;i love&quot;;
    string C=&quot;game lol&quot;;
    B.append(C,0,4);只截取game，参数0是从哪个位置开始，参数4是截取的长度
        
    查找
    string A=&quot;abcde&quot;;
    int x=A.find(&quot;de&quot;);输出x=3,没有的情况输出-1；
    string A=&quot;abcdeabde&quot;;
    int x=A.rfind(&quot;de&quot;);输出7，是从右向左开始查找；
        
    替换
    string A=&quot;abcdefg&quot;;
    A.replace(1,3,&quot;11111111&quot;);从1好起3个字符替换成11111111
</code></pre>
<pre><code>NULL代表0
</code></pre>
<h2 id="高精度加法"><a href="#高精度加法" class="headerlink" title="高精度加法"></a>高精度加法</h2><pre><code class="c++">#include&lt;iostream&gt;
#include&lt;vector&gt;

using namespace std; 


vector&lt;int&gt; add(vector&lt;int&gt;&amp; A, vector&lt;int&gt;&amp; B) &#123;

    vector&lt;int&gt; C;

    int t = 0;
    for (int i = 0; i &lt; A.size() || i &lt; B.size(); i++) &#123;
        if (i &lt; A.size()) t += A[i];
        if (i &lt; B.size()) t += B[i];
        C.push_back(t % 10);
        t /= 10;
    &#125;
    if (t) C.push_back(1);
    return C;
&#125;

int main() &#123;
    string a, b;
    vector&lt;int&gt; A, B;

    cin &gt;&gt; a &gt;&gt; b;
    for (int i = a.size() - 1; i &gt;= 0; i--) A.push_back(a[i] - &#39;0&#39;);
    for (int i = b.size() - 1; i &gt;= 0; i--) B.push_back(b[i] - &#39;0&#39;);

    auto C = add(A, B);

    for (int i = C.size() - 1; i &gt;= 0; i--) printf(&quot;%d&quot;, C[i]);
    return 0;
&#125;
</code></pre>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>导航</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构</title>
    <url>/2023/09/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h2 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h2><pre><code>typedef struct
&#123;
    int a;
&#125; Per;
</code></pre>
<pre><code>struct Person
&#123;
    int a;
&#125;;
</code></pre>
<span id="more"></span>

<h2 id="指针所指变量的引用"><a href="#指针所指变量的引用" class="headerlink" title="指针所指变量的引用"></a>指针所指变量的引用</h2><p>指针变量-&gt;结构变量成员名（指针变量-&gt;结构变量的域名）</p>
<pre><code>typedef struct&#123;
    int no;
    char title[40];
&#125;*Book;
Book pboo;
pboo-&gt;no=1;
</code></pre>
<img src="/2023/09/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230911120426.jpg" class title="微信图片_20230911120426">

<p>一般而言，a、b、c、d、e等用作数据元素名，i、j、K、l、m、等用作整型变量名，p、q、r 等用作指针变量名；</p>
<h2 id="内存动态分配与释放C"><a href="#内存动态分配与释放C" class="headerlink" title="内存动态分配与释放C++"></a>内存动态分配与释放C++</h2><p>分配空间 指针变量&#x3D;new 数据类型；p&#x3D;new int[10]  &#x2F;&#x2F;动态数组10个元素</p>
<p>释放空间 delete 指针变量；</p>
<pre><code>int*p = new int;
//开辟一个存放整数的存储空间，返回一个指向该存储空间的地址（指针）
int*p = new int(10);
//开辟一个存放整数的存储空间，并指定该整数的初值为10，返回一个指向该存储空间的地址（指针）
delete p;
</code></pre>
<pre><code>new运算符使用的一般格式：
new 类型[初值]

char *pt=new char[10];开辟的字符数组空间，如果把new返回的指针赋给指针变量pt，则应该用下列形式的delete运算符撤销该空间；
    delete []pt;//指针前加中括号，释放数组
</code></pre>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>导航</tag>
      </tags>
  </entry>
  <entry>
    <title>宏基 win11</title>
    <url>/2023/11/04/%E5%AE%8F%E5%9F%BA%20win11/</url>
    <content><![CDATA[<h3 id="跳过系统安装检查"><a href="#跳过系统安装检查" class="headerlink" title="跳过系统安装检查"></a>跳过系统安装检查</h3><pre><code>1.Shift+F10调用命令 输入regedit

2.定位到HKEY_LOCAL_MACHLNE的system中SETUP新建Labconfig

3.新建3个32位值ByPassTPMCheck;ByPassSecureBootCheck;BypassRAMCheck

4.3个数值数据改为1
</code></pre>
<span id="more"></span>

<h3 id="U盘启动"><a href="#U盘启动" class="headerlink" title="U盘启动"></a>U盘启动</h3><pre><code>1.F2进入
2.找到Main中SATA MODE改为IDE MODE
3.F12设置要启动的选项
</code></pre>
<h3 id="关闭VMD"><a href="#关闭VMD" class="headerlink" title="关闭VMD"></a>关闭VMD</h3><pre><code>在Main界面下按Ctrl+S会显示隐藏的选项改成Disabled
</code></pre>
]]></content>
      <categories>
        <category>重装系统</category>
      </categories>
      <tags>
        <tag>导航</tag>
      </tags>
  </entry>
  <entry>
    <title>博客搭建</title>
    <url>/2023/11/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h1><ul>
<li><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><img src="/2023/11/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20231104141040394.png" class title="image-20231104141040394">

<span id="more"></span>
</li>
<li><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><img src="/2023/11/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20231104141055031.png" class title="image-20231104141055031">
</li>
<li><h3 id="强力驱动"><a href="#强力驱动" class="headerlink" title="强力驱动"></a><strong>强力驱动</strong></h3><img src="/2023/11/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20231104141312827.png" class title="image-20231104141312827">
</li>
<li><h3 id="浏览进度"><a href="#浏览进度" class="headerlink" title="浏览进度"></a>浏览进度</h3><img src="/2023/11/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20231104141327010.png" class title="image-20231104141327010">
</li>
<li><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><img src="/2023/11/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20231104141345825.png" class title="image-20231104141345825">
</li>
<li><h3 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h3><img src="/2023/11/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20231104141356828.png" class title="image-20231104141356828">
</li>
<li><h3 id="阅读全文"><a href="#阅读全文" class="headerlink" title="阅读全文"></a>阅读全文</h3><img src="/2023/11/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20230815084316834.png" class title="image-20230815084316834">

<p>方法二：<!--more-->直接截断</p>
</li>
<li><h3 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h3><img src="/2023/11/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20230815085848807.png" class title="image-20230815085848807">
</li>
<li><p>打赏</p>
<img src="/2023/11/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20230815091841744.png" class title="image-20230815091841744">
</li>
<li><p>加载界面</p>
<img src="/2023/11/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20230815111017587.png" class title="image-20230815111017587">
</li>
<li><p>爱心点击</p>
<img src="/2023/11/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20230815112538681.png" class title="image-20230815112538681">

<img src="/2023/11/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20230815112609514.png" class title="image-20230815112609514">

<pre><code class="c++">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/click-live.js&quot; /&gt;
</code></pre>
<pre><code class="c++">! function (e, t, a) &#123;
    function n() &#123;
        c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#39;&#39;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;), o(), r()
    &#125;
     
    function r() &#123;
        for (var e = 0; e &lt; d.length; e++) d[e].alpha &lt;= 0 ? (t.body.removeChild(d[e].el), d.splice(e, 1)) : (d[e].y--, d[e].scale += .004, d[e].alpha -= .013, d[e].el.style.cssText = &quot;left:&quot; + d[e].x + &quot;px;top:&quot; + d[e].y + &quot;px;opacity:&quot; + d[e].alpha + &quot;;transform:scale(&quot; + d[e].scale + &quot;,&quot; + d[e].scale + &quot;) rotate(45deg);background:&quot; + d[e].color + &quot;;z-index:99999&quot;);
        requestAnimationFrame(r)
    &#125;
     
    function o() &#123;
        var t = &quot;function&quot; == typeof e.onclick &amp;&amp; e.onclick;
        e.onclick = function (e) &#123;
            t &amp;&amp; t(), i(e)
        &#125;
    &#125;
     
    function i(e) &#123;
        var a = t.createElement(&quot;div&quot;);
        a.className = &quot;heart&quot;, d.push(&#123;
            el: a,
            x: e.clientX - 5,
            y: e.clientY - 5,
            scale: 1,
            alpha: 1,
            color: s()
        &#125;), t.body.appendChild(a)
    &#125;
     
    function c(e) &#123;
        var a = t.createElement(&quot;style&quot;);
        a.type = &quot;text/css&quot;;
        try &#123;
            a.appendChild(t.createTextNode(e))
        &#125; catch (t) &#123;
            a.styleSheet.cssText = e
        &#125;
        t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)
    &#125;
     
    function s() &#123;
        return &quot;rgb(&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;)&quot;
    &#125;
    var d = [];
    e.requestAnimationFrame = function () &#123;
        return e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function (e) &#123;
            setTimeout(e, 1e3 / 60)
        &#125;
    &#125;(), n()
    &#125;(window, document);
</code></pre>
</li>
</ul>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>导航</tag>
      </tags>
  </entry>
  <entry>
    <title>恋爱圈</title>
    <url>/2023/11/05/%E6%81%8B%E7%88%B1%E5%9C%88/</url>
    <content><![CDATA[<h1 id="恋爱圈"><a href="#恋爱圈" class="headerlink" title="恋爱圈"></a>恋爱圈</h1><h2 id="西湖"><a href="#西湖" class="headerlink" title="西湖"></a>西湖</h2><p>高考终于结束啦！“虽然没有达到真正出行的目的  但是达到了更好效果！”——2023年7月13日</p>
<p>哈哈！高考结束去和龟蜜一起外出打工，想去富士康做工，奈何他们人招满了，找了好几天都没有找到招收临时工的！啊 啊 啊 ！于是就让我哥送我回家，嘻嘻在回去的路上顺便去了趟西湖，哈哈虽然没有达到真正出行的目的  但是达到了更好效果！</p>
<span id="more"></span>

<img src="/2023/11/05/%E6%81%8B%E7%88%B1%E5%9C%88/image-20231104211316994.png" class title="image-20231104211316994">

<h2 id="冒个泡"><a href="#冒个泡" class="headerlink" title="冒个泡"></a>冒个泡</h2><p>我弟龟蜜我滴好同桌！</p>
<img src="/2023/11/05/%E6%81%8B%E7%88%B1%E5%9C%88/image-20231104214324191.png" class title="image-20231104214324191">

<p>小添狗也冒个烟！</p>
<img src="/2023/11/05/%E6%81%8B%E7%88%B1%E5%9C%88/image-20231104215358643.png" class title="image-20231104215358643">

]]></content>
      <categories>
        <category>恋爱圈</category>
      </categories>
      <tags>
        <tag>导航</tag>
      </tags>
  </entry>
</search>
